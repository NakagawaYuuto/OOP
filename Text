ーオブジェクト指向ー
大きなプログラムを記述しようとすると、開発に時間がかかったり、完成しても不具合だらけにプログラムになったりしてしまう事が少なくない。
    →　人間自身がプログラム開発のボトルネックになってしまっている！
    オブジェクト指向プログラミングという考え方が生まれた。（正解自体を学ぶのではなく正解に辿り着くための考え方を学ぶ）

オブジェクト指向には・発想・着眼点・テクニック・関係する文法が含まれている

ーオブジェクト指向の定義ー
オブジェクト指向とはソフトウェアを開発するときに用いる部品化の考え方
    →　１つのプログラムを作る際に複数に部品化すると、その内容が把握しやすくなる！
オブジェクト指向を学んでいくと人間の頭が追いつかない状況を避ける事ができるようになる。

何のためにあるのか？利用するといいメリット？
    →　人間が内容把握しやすいプログラム開発を実現する。
        ・プログラムの変更が容易になる
        ・プログラムの一部を簡単に転用できる

これらは厳しい予算や納期の中で大規模なプログラムを何度も開発したり修正したりするようになって初めて実感できる・・・
Java初心者に対してメリットは・・・
        『ラクして、楽しく、良いものを』作れる！        この一言に尽きる。

ーオブジェクト指向と現実世界ー
何のためにプログラムを開発するのか？
現実世界における何かしらの活動を自動化するためにプログラム開発をする（人がしてた事を機械に行わせてラクをする）
そのため現実世界とは無関係で単独で存在しているものは、ほとんどない！
実際に出てくる登場人物単位で、プログラムを部品化する

ー手続き型プログラミングとの違いー
手続き型プログラミング：開発者が頭を捻り手順を考えプログラムの先頭から順番の命令として記述していく方法
オブジェクト指向での開発はイメージ図（設計図）から作成する。　＊いきなりコードは書かない。ITが分からない人でも理解出来る様に

仮想的なて登場人物は　JVM　の中に生み出される＝現実世界をそっくりまねたJava仮想世界が出来る。

ーオブジェクト指向における開発者の役割ー
Javaの世界では神様である！！
自在に登場人物や物を生み出せるからである！！
（〜指向とは：〜を大切にした。〜を中心に捉えた。という意味）

ー本質ー
私たち人間が慣れ親しみ、よく把握している現実世界を真似して作られたプログラムもまた、
私たち人間にとって把握しやすい物だから。
メリット：
・現実世界をお手本に、それを真似して作ればいい。
変化があった場合は、対応する部品（クラス）を修正、交換すれば簡単にプログラムを修正出来る。